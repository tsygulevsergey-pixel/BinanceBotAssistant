"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import sqlite3
import json
from datetime import datetime
import os

def export_signals():
    db_path = 'data/trading_bot.db'
    
    if not os.path.exists(db_path):
        print(f"‚ùå –û—à–∏–±–∫–∞: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ
        conn = sqlite3.connect(db_path)
        conn.row_factory = sqlite3.Row
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–∏–≥–Ω–∞–ª—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π (–Ω–µ Action Price)
        print("üìä –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É—é —Å–∏–≥–Ω–∞–ª—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        cursor.execute('''
            SELECT * FROM signals 
            WHERE strategy_name != 'ActionPrice'
            ORDER BY created_at DESC
        ''')
        
        signals = []
        for row in cursor.fetchall():
            signal_dict = dict(row)
            signals.append(signal_dict)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON —Ñ–∞–π–ª
        output_file = 'main_strategies_export.json'
        with open(output_file, 'w', encoding='utf-8') as f:
            json.dump(signals, f, indent=2, ensure_ascii=False, default=str)
        
        print(f'\n‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {len(signals)} —Å–∏–≥–Ω–∞–ª–æ–≤')
        print(f'üìÅ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {output_file}')
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º
        if signals:
            print("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º:")
            strategies = {}
            for sig in signals:
                strat = sig.get('strategy_name', 'Unknown')
                strategies[strat] = strategies.get(strat, 0) + 1
            
            for strat, count in sorted(strategies.items(), key=lambda x: x[1], reverse=True):
                print(f"  - {strat}: {count} —Å–∏–≥–Ω–∞–ª–æ–≤")
            
            # –ü–µ—Ä–∏–æ–¥ –¥–∞–Ω–Ω—ã—Ö
            first_date = signals[-1].get('created_at', 'N/A')
            last_date = signals[0].get('created_at', 'N/A')
            print(f"\nüìÖ –ü–µ—Ä–∏–æ–¥ –¥–∞–Ω–Ω—ã—Ö:")
            print(f"  –ü–µ—Ä–≤—ã–π —Å–∏–≥–Ω–∞–ª: {first_date}")
            print(f"  –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–≥–Ω–∞–ª: {last_date}")
        else:
            print("\n‚ö†Ô∏è –°–∏–≥–Ω–∞–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    export_signals()
