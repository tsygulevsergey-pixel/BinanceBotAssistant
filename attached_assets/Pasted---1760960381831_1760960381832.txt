ок, вот полноценное ТЗ для айтишника. без кода, но с чёткими правилами, интерфейсами, форматами данных, валидацией и требованиями к производительности, чтобы не было «узких горлышек».

Цель

Добавить в существующий алгоритмический стек четыре компонента:

сигналы Flip-Retest (пробой зоны → закрепление → ретест)

сигналы Sweep-Return (ложный пробой/снятие ликвидности → возврат в диапазон)

фильтр VWAP-bias (контекст «в сторону VWAP»)

авто-расчёт SL/TP от границ зон + логгер качества (hit-rate после касаний и др.)

Работа строго мульти-ТФ (минимум M15/H1, опционально H4/D для контекста). Всё параметризуемо, без хардкода.

1) Входные данные и зависимости
1.1. Источники

Котировки: OHLCV по символам и ТФ (минимум M1, M5, M15, H1, H4, D), с гарантией целостности и монотонности времени.

Зоны S/R: уже реализованный модуль зон (как обсуждали ранее: зона = ценовой интервал + метаданные/сила/тип/история).

Торговые ограничения символа: размер тика, minQty, stepSize, minNotional (для округлений SL/TP).

1.2. Предварительные расчёты (кешируемые)

ATR(n) для каждого ТФ (по умолчанию n=14), скользящее окно.

VWAP:

Интрадей (с начала UTC-дня) и/или анкерный (последний swing high/low; якорение: бар индекса экстремума).

Поддержка нескольких якорей одновременно: day_VWAP, session_VWAP, anchored_VWAP[k].

EMA200 (опционально, для конфлюэнса).

Режим волатильности: low/normal/high (по квантилям ATR/Close).

Все эти ряды — в rolling-кешах по каждому ТФ и символу, обновляемых на новой свече O(1).

2) Параметры (единый конфиг)

Конфиг хранится в YAML/JSON, загружается при старте, поддерживает hot-reload без перезапуска:

General

symbols: [“BTCUSDT”, …]

tfs: { entry: ["M15","H1"], context: ["H4","D"] }

clock_skew_tolerance: 1500ms

Zones

zone_min_strength: 60 (порог использования зон; 60=“strong”)

merge_overlap_threshold: 0.4 (если модуль зон делает merge на лету)

Flip-Retest

break_body_buffer_atr: 0.3 (сколько ATR_mtf должно закрытие уйти за границу зоны, чтобы считать «пробой телом»)

confirm_closes: 2 (сколько закрытий подряд за зоной для «закрепления»)

retest_timeout_bars: 12 (сколько баров ждём ретест после закрепления)

retest_accept_delta_atr: 0.25 (максимальная дистанция ретеста от края зоны, в ATR_mtf)

entry_trigger: ["engulfing","choch"] (разрешённые микро-триггеры на младшем ТФ)

Sweep-Return

sweep_max_bars: 3 (ложный пробой должен вернуться за уровень ≤ N баров)

sweep_min_wick_ratio: 1.2 (отношение хвоста к телу у свечи-выноса, фильтр качества)

return_body_inside: true (требуем закрытие обратно внутрь диапазона)

VWAP-bias

use_intraday_vwap: true

use_anchored_vwap: true

bias_rule: "trade_with_vwap_side" (лонги над vwap, шорты под vwap)

bias_violation_allowed: false (если true — допускаем контртренд только при sweep-return «А-класс»)

SL/TP

sl_buffer_atr: 0.25 (добавка к противоположной границе зоны)

tp1_target: "nearest_local_zone" | "1R"

tp2_target: "next_htf_zone" | "2R+"

trail_after_tp1: true, move_to_be_after_tp1: true

Logging

log_all_touches: true

reaction_window_bars: 8 (сколько баров после касания проверяем откат ≥ r1*ATR)

reaction_threshold_atr: 0.7

persist_latency_budget_ms: 50 (лимит на запись в БД события)

Все пороги — по умолчанию как выше; но 100% настраиваемые.

3) Интерфейсы между модулями
3.1. Интерфейс модуль_зон → сигнальный_движок

Запрос зон по символу/ТФ:

Input: symbol, tf, as_of_ts
Output (массив):

zone_id: str

tf: "D|H4|H1|M15|M5"

kind: "S"|"R"

low: float, high: float, mid: float

strength: float (0..100), class: "key|strong|normal|weak"

state: "normal|weakening|flipped"

last_touch_ts: int

history: [ {event, ts, extra}...]

Требование: сортировка по старшинству ТФ и силе; без пересекающихся дубликатов (или с флагом объединения).

3.2. Интерфейс сигнальный_движок → оркестратор/бот

Событие сигнала:

signal_id (детерминированный: hash(symbol, tf_entry, zone_id, setup_type, ts))

symbol, tf_entry, setup_type: "FlipRetest"|"SweepReturn"

direction: "LONG"|"SHORT"

zone_ref: {zone_id, tf, low, high, kind}

context: {vwap_bias: "BULL"|"BEAR"|"NEUTRAL", htf_context: ["D:KeyR", "H4:StrongS", ...]}

prices: {entry: float, sl: float, tp1: float, tp2: float}

quality: {confidence: 0..100, reasons: [tags]}

valid_until_ts (таймаут на исполнение сигнала)

audit: {break_params, retest_params | sweep_params}

4) Логика сигналов
4.1. Общие правила

Используем только зоны с strength ≥ zone_min_strength.

Приоритет старших зон: если на M15 сигнал против D/H4 «key R/S», сигнал фильтруется (BLOCK) или понижается confidence.

На каждом новом баре entry-ТФ (M15/H1) выполняем детерминированную проверку условий.

4.2. Flip-Retest (лонг)

Контекст: есть зона R (на H1/H4/D) с strength ≥ threshold.

Пробой телом: на entry-ТФ (обычно M15/H1) закрытие Close_t > high_zone + break_body_buffer_atr*ATR_entry.

Закрепление: как минимум confirm_closes закрытий подряд над зоной или одно закрытие + быстрый ретест.

Ретест: в течение retest_timeout_bars цена возвращается к зоне; минимальная дистанция до верхней границы не больше retest_accept_delta_atr*ATR_entry.

Триггер входа: на ретесте сформирован паттерн из entry_trigger (например, engulfing/choch) на стороне отскока.

VWAP-bias: активен и не противоречит направлению (цена над VWAP или возврат/удержание над VWAP).

Сигнал LONG:

entry = цена подтверждающего бара (или лимит у края зоны, параметризуемо)

sl = ниже low_zone - sl_buffer_atr*ATR_entry (с округлением по тик-size)

tp1, tp2 — см. блок SL/TP

confidence повышается при конfluence (пересечение D/H4 зоны, EMA200 снизу, объёмный POC рядом).

Аналогично для SHORT, меняя «выше/ниже» и kind=Support.

4.3. Sweep-Return (лонг)

Контекст: есть зона S (на H1/H4/D) достаточной силы.

Вынос: цена прокалывает low_zone (лучше хвостом: свеча с wick/body ≥ sweep_min_wick_ratio) и уходит ниже, но в пределах sweep_max_bars возвращается закрытием обратно внутрь зоны (return_body_inside=true).

Триггер входа: первый микро-паттерн (engulf/choch) в сторону возврата.

VWAP-bias: допускается лонг, если цена в момент триггера над VWAP или выполняется правило исключения (например, «sweep-A-класс» с очень коротким SL).

Сигнал LONG:

entry = после подтверждения возврата

sl = за экстремум выноса + sl_buffer_atr*ATR_entry

tp = сначала mid диапазона/ближайшая локальная зона, затем «старшая» зона.

Аналогично для SHORT (вынос выше high_zone и возврат вниз).

Дебаунс/анти-шум:

Не формировать новый сигнал в той же зоне, если предыдущий ещё валиден (пока не истёк valid_until_ts или не отменён отменяющим событием — «чистый пробой в противоположную сторону»).

Сигналы на одной свече объединять по приоритету: Flip-Retest приоритетнее Sweep-Return, если оба условия совпали.

5) VWAP-bias (контекстный фильтр)

BULL: price >= vwap - ε, BEAR: price <= vwap + ε, где ε = 0.05 * ATR_entry (параметр).

Если bias_rule = "trade_with_vwap_side" — отбрасываем сигналы, идущие против bias, кроме случаев Sweep-Return с флагом A-grade (сильный ложный пробой, быстрый возврат, крупная старшая зона — набор условий задаётся в конфиге).

6) Авто-SL/TP и управление сделкой (расчёт, без исполнения)
6.1. Общие правила

Все уровни округлять по tickSize/stepSize символа.

При наличии нескольких соседних зон TP1 выбирается по правилу:

Если tp1_target="nearest_local_zone" — ближайшая зона по направлению сделки на entry-ТФ.

Если tp1_target="1R" — TP1 = entry + 1R*sign, где R = |entry - sl|.

TP2:

"next_htf_zone" — следующая значимая зона на H1/H4/D.

"2R+" — минимум 2R, при наличии зоны дальше — «snap» к её краю.

После TP1: move_to_be_after_tp1=true → стоп переносится в BE; trail_after_tp1=true → трейлинг по свинг-экстремумам младшего ТФ или по x*ATR (настраивается).

В сигнальном объекте вернуть все рассчитанные уровни и логику сопровождения (как политика).

7) Логирование качества (метрики)
7.1. Единица события

Писать в БД в реальном времени, батчами (см. перформанс):

touch_event: касание зоны (bar_ts, zone_id, side_in/out, depth, immediate_reaction_atr)

signal_event: с детерминированным signal_id и всеми параметрами сигнала

reaction_event: в окне reaction_window_bars после touch_event — факт реакции ≥ reaction_threshold_atr (true/false, величина)

cancel_event: отмены/инвалидации сигналов (например, чистый пробой зоны в обратную сторону)

7.2. Метрики/дашборд (агрегации)

Hit-rate после касаний: доля касаний → откат ≥ r1*ATR за m баров (по зоне/ТФ/символу/режиму волатильности).

Flip-Retest winrate, Sweep-Return winrate (по R-кратности и TP1/TP2 достижению).

Средний откат (ATR), среднее время до реакции (в барах).

Ложные пробои на 100 касаний.

Качество по VWAP-bias (в сторону/против).

Latency записи (p50/p95).

7.3. Схема таблиц (уровень полей)

Без SQL — только поля:

zones(zone_id, symbol, tf, low, high, strength, kind, updated_ts, ...)

zone_events(event_id, zone_id, symbol, tf, ts, type:touch|body_break|flip|..., payload_json)

signals(signal_id, symbol, tf_entry, setup_type, direction, zone_id, entry, sl, tp1, tp2, confidence, valid_until_ts, context_json, created_ts)

signal_outcomes(signal_id, filled:bool, max_favorable_excursion, max_adverse_excursion, tp1_hit, tp2_hit, sl_hit, be_hit, r_multiple, duration_bars, closed_ts)

metrics_rollups(date, symbol, tf, metric_name, metric_value, tags_json)

Индексы: (symbol, tf, ts) и (signal_id).

8) Производительность и архитектура (без узких мест)
8.1. Поток обработки

Событийная модель: на закрытии каждой новой свечи по tf_entry вызывается «пакетная» проверка сигналов по всем активным зонам этого ТФ.

Идемпотентность: хешируем входы (symbol, tf, bar_ts, zone_id, setup) → signal_id, чтобы повторный прогон не дублировал сигнал.

Кеши/структуры:

Rolling-кеш ATR/VWAP/EMA на каждом ТФ (ring-buffer, O(1) обновление).

Индекс зон по ценовым интервалам (interval tree или отсортированный массив с бинпоиском) — поиск активных зон: O(log Z).

Параллельность: шардирование по symbol (акто-модель/воркеры). Коммуникация через очередь (in-proc или MQ).

Запись в БД: неблокирующая: буфер событий в памяти + флаш батчами (например, каждые 200–500 событий или 100мс, что наступит раньше). Контроль — persist_latency_budget_ms.

8.2. Сложность

На бар: O(log Z + K) на символ/ТФ, где Z — число зон, K — число кандидат-сетапов (обычно малое).

На портфель: линейно по числу символов и entry-ТФ.

8.3. Толерантность к сбоям

Все события детерминированы по входу → при рестарте возможен чистый ре-плей без дублей.

Очереди и батчи — с флагом «доставлено/подтверждено». При падении — идемпотентная повторная запись.

9) Выравнивание мульти-ТФ и крайние случаи

Синхронизация ТФ: сигнал на M15 синхронизируется с контекстом H1/H4/D по ближайшему закрытому бару старшего ТФ.

Гэп/хаосные хвосты: вводим фильтр «аномальных» свечей (например, z-score по диапазону > 4) — такие свечи помечать, но не удалять, и не считать за валидный пробой, если это «ошибка тика/биржи».

Точность округлений: все уровни (SL/TP/Entry) приводить к допускам биржи; на выходе возвращать и «сырую», и «округлённую» цены.

Дубликаты зон: если модуль зон отдаёт пересекающиеся зоны разных ТФ — применяем правило приоритета старшего ТФ (младшая зона «прилипает» и отдаёт приоритет расчётам старшей).

10) Качество, тест-план и мониторинг
10.1. Юнит-проверки (детерминированные)

Пробой/закрепление/ретест на синтетических рядах (позитив/негатив кейсы).

Sweep-Return с различными формами хвоста и скоростью возврата.

VWAP-bias: корректная сторона при разных якорях.

SL/TP: корректность округления и расчёта R-кратности.

10.2. Бэктест-план

Выбрать репрезентативный список символов (BTC, ETH, волатильные альты), период ≥ 6 мес.

Для каждого символа/ТФ: прогоны со стандартным конфигом → собрать метрики (см. §7.2).

Стабильность по режимам волатильности (квантили ATR).

Чувствительность к ключевым параметрам (break_body_buffer_atr, confirm_closes, reaction_threshold_atr, retest_timeout_bars).

10.3. Мониторинг в реальном времени

Алёрты при: падении hit-rate реакции ниже порога, увеличении «ложных пробоев»/100 касаний, росте latency записи, пропусках свечей.

11) Формат «сигнала» на выход (для интеграции)

(Это не код, а структура полей)

signal_id, symbol, tf_entry, setup_type, direction

zone_ref {zone_id, tf, kind, low, high, strength}

context {vwap_bias, htf_summary, vol_regime}

entry/sl/tp1/tp2 (raw + rounded)

r_values {r1, r2}, management_policy {be_after_tp1, trailing_rule}

confidence (0..100), reasons [“flip_confirmed”, “vwap_ok”, “d_overlap”…]

valid_until_ts, created_ts

audit {...параметры срабатывания...}

12) Нефункциональные требования

Детерминизм: один и тот же вход → тот же сигнал_id и уровни.

Локализация времени: все расчёты — в UTC, без зависимостей на локальное время.

Документируемость: автогенерация «отчёта параметров» (снапшот активного конфига) при каждом релизе.

Безопасность: параметры, влияющие на риск, только из whitelist-конфига; в рантайме — read-only API для получения сигналов/метрик.

13) Что передать разработчику для старта

Справочник символов (tickSize/stepSize/minNotional).

Сэмпл-дамп свечей и зон (JSON согласно интерфейсу).

Конфиг-дефолт из §2.

Тест-кейсы (json с синтетикой для Flip-Retest и Sweep-Return).

Схема БД (поля из §7.3) + индексация.