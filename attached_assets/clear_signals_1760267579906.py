#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import sqlite3
import sys

DB_PATH = "data/trading_bot.db"

def clear_all_signals():
    """–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–∏–≥–Ω–∞–ª—ã –∏–∑ –ë–î"""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    
    # –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å —Å–∏–≥–Ω–∞–ª—ã –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
    cursor.execute("SELECT COUNT(*) FROM signals")
    count_before = cursor.fetchone()[0]
    print(f"üìä –°–∏–≥–Ω–∞–ª–æ–≤ –≤ –ë–î: {count_before}")
    
    if count_before == 0:
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ –ø—É—Å—Ç–∞")
        conn.close()
        return
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    response = input(f"\n‚ö†Ô∏è  –£–¥–∞–ª–∏—Ç—å –≤—Å–µ {count_before} —Å–∏–≥–Ω–∞–ª–æ–≤? (yes/no): ")
    if response.lower() != 'yes':
        print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")
        conn.close()
        return
    
    # –£–¥–∞–ª–µ–Ω–∏–µ
    cursor.execute("DELETE FROM signals")
    conn.commit()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞
    cursor.execute("SELECT COUNT(*) FROM signals")
    count_after = cursor.fetchone()[0]
    
    print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–∏–≥–Ω–∞–ª–æ–≤: {count_before - count_after}")
    print(f"üìä –°–∏–≥–Ω–∞–ª–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å: {count_after}")
    
    conn.close()

def clear_by_status(status):
    """–£–¥–∞–ª–∏—Ç—å —Å–∏–≥–Ω–∞–ª—ã –ø–æ —Å—Ç–∞—Ç—É—Å—É"""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    
    cursor.execute("SELECT COUNT(*) FROM signals WHERE status = ?", (status,))
    count_before = cursor.fetchone()[0]
    print(f"üìä –°–∏–≥–Ω–∞–ª–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '{status}': {count_before}")
    
    if count_before == 0:
        print(f"‚úÖ –ù–µ—Ç —Å–∏–≥–Ω–∞–ª–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '{status}'")
        conn.close()
        return
    
    response = input(f"\n‚ö†Ô∏è  –£–¥–∞–ª–∏—Ç—å {count_before} —Å–∏–≥–Ω–∞–ª–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '{status}'? (yes/no): ")
    if response.lower() != 'yes':
        print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")
        conn.close()
        return
    
    cursor.execute("DELETE FROM signals WHERE status = ?", (status,))
    conn.commit()
    
    print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–∏–≥–Ω–∞–ª–æ–≤: {count_before}")
    conn.close()

def show_stats():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏–≥–Ω–∞–ª–æ–≤"""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    
    cursor.execute("""
        SELECT status, COUNT(*) as count 
        FROM signals 
        GROUP BY status
    """)
    
    stats = cursor.fetchall()
    
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤:")
    print("-" * 30)
    total = 0
    for status, count in stats:
        print(f"  {status}: {count}")
        total += count
    print("-" * 30)
    print(f"  –í–°–ï–ì–û: {total}")
    
    conn.close()

if __name__ == "__main__":
    print("üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤")
    print("=" * 40)
    
    show_stats()
    
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print("1. –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–∏–≥–Ω–∞–ª—ã")
    print("2. –£–¥–∞–ª–∏—Ç—å –ø–æ —Å—Ç–∞—Ç—É—Å—É (WIN/LOSS/TIME_STOP)")
    print("3. –£–¥–∞–ª–∏—Ç—å ACTIVE/PENDING")
    print("4. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    print("0. –í—ã—Ö–æ–¥")
    
    choice = input("\n–í–∞—à –≤—ã–±–æ—Ä: ")
    
    if choice == "1":
        clear_all_signals()
    elif choice == "2":
        status = input("–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞—Ç—É—Å (WIN/LOSS/TIME_STOP): ").upper()
        clear_by_status(status)
    elif choice == "3":
        status = input("–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞—Ç—É—Å (ACTIVE/PENDING): ").upper()
        clear_by_status(status)
    elif choice == "4":
        show_stats()
    elif choice == "0":
        print("üëã –í—ã—Ö–æ–¥")
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
