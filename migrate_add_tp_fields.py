#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –¥–ª—è Trailing Stop-Loss
–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—è tp1_hit, tp1_closed_at, exit_type –∫ —Ç–∞–±–ª–∏—Ü–µ signals
"""

import sqlite3
from pathlib import Path
from src.utils.config import config

def check_column_exists(cursor, table_name, column_name):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ"""
    cursor.execute(f"PRAGMA table_info({table_name})")
    columns = [row[1] for row in cursor.fetchall()]
    return column_name in columns

def migrate():
    db_path = config.database_path
    
    if not Path(db_path).exists():
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return
    
    print(f"üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {db_path}")
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ tp1_hit
        if not check_column_exists(cursor, 'signals', 'tp1_hit'):
            print("  ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è 'tp1_hit'...")
            cursor.execute("ALTER TABLE signals ADD COLUMN tp1_hit BOOLEAN DEFAULT 0")
            print("  ‚úÖ –ü–æ–ª–µ 'tp1_hit' –¥–æ–±–∞–≤–ª–µ–Ω–æ (default: False)")
        else:
            print("  ‚è≠Ô∏è  –ü–æ–ª–µ 'tp1_hit' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ tp1_closed_at
        if not check_column_exists(cursor, 'signals', 'tp1_closed_at'):
            print("  ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è 'tp1_closed_at'...")
            cursor.execute("ALTER TABLE signals ADD COLUMN tp1_closed_at DATETIME")
            print("  ‚úÖ –ü–æ–ª–µ 'tp1_closed_at' –¥–æ–±–∞–≤–ª–µ–Ω–æ (default: NULL)")
        else:
            print("  ‚è≠Ô∏è  –ü–æ–ª–µ 'tp1_closed_at' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ exit_type
        if not check_column_exists(cursor, 'signals', 'exit_type'):
            print("  ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è 'exit_type'...")
            cursor.execute("ALTER TABLE signals ADD COLUMN exit_type VARCHAR(20)")
            print("  ‚úÖ –ü–æ–ª–µ 'exit_type' –¥–æ–±–∞–≤–ª–µ–Ω–æ (default: NULL)")
        else:
            print("  ‚è≠Ô∏è  –ü–æ–ª–µ 'exit_type' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        conn.commit()
        print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {db_path}")
        
        # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        cursor.execute("SELECT COUNT(*) FROM signals")
        total_signals = cursor.fetchone()[0]
        print(f"üìà –í—Å–µ–≥–æ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤ –±–∞–∑–µ: {total_signals}")
        
    except Exception as e:
        conn.rollback()
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        raise
    
    finally:
        conn.close()

if __name__ == "__main__":
    print("=" * 60)
    print("  –ú–ò–ì–†–ê–¶–ò–Ø: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π Trailing Stop-Loss")
    print("=" * 60)
    migrate()
    print("=" * 60)
