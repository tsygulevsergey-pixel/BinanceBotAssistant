"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è exit_type —Å—Ç–∞—Ä—ã—Ö breakeven —Å–¥–µ–ª–æ–∫
"""
import sqlite3

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
conn = sqlite3.connect('./data/trading_bot.db')
cursor = conn.cursor()

# –ù–∞–π—Ç–∏ –≤—Å–µ —Å–¥–µ–ª–∫–∏ —Å exit_type='TP1' –∏ pnl_percent=0
cursor.execute('''
    SELECT id, symbol, direction, exit_type, pnl_percent, exit_price, entry_price
    FROM signals
    WHERE exit_type = 'TP1' 
      AND pnl_percent = 0.0
      AND exit_price = entry_price
''')

old_records = cursor.fetchall()

if not old_records:
    print("‚úÖ –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
else:
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(old_records)} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:\n")
    for record in old_records:
        print(f"  ID {record[0]}: {record[1]} {record[2]} | TP1 ‚Üí BREAKEVEN")
    
    # –°–ø—Ä–æ—Å–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    answer = input(f"\n‚ùì –ò—Å–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–∏ {len(old_records)} –∑–∞–ø–∏—Å–∏? (y/n): ")
    
    if answer.lower() == 'y':
        # –ò—Å–ø—Ä–∞–≤–∏—Ç—å exit_type –Ω–∞ BREAKEVEN
        cursor.execute('''
            UPDATE signals
            SET exit_type = 'BREAKEVEN'
            WHERE exit_type = 'TP1' 
              AND pnl_percent = 0.0
              AND exit_price = entry_price
        ''')
        
        conn.commit()
        print(f"\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {cursor.rowcount} –∑–∞–ø–∏—Å–µ–π!")
        print("üìä –¢–µ–ø–µ—Ä—å –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    else:
        print("\n‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")

conn.close()
