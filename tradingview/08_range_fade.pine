// @version=5
// Strategy #8: Range Fade
// Торговля в диапазоне от уровней S/R
strategy("08. Range Fade", overlay=true, 
         initial_capital=10000, default_qty_type=strategy.percent_of_equity, 
         default_qty_value=100, commission_type=strategy.commission.percent, 
         commission_value=0.04)

// Параметры
range_period = input.int(20, "Range Period", minval=10, maxval=50)
min_tests = input.int(2, "Min Tests of Level", minval=1, maxval=5)
touch_atr = input.float(0.2, "Touch Threshold (ATR)", minval=0.1, maxval=0.5, step=0.05)
time_stop_bars = input.int(8, "Time Stop (bars)", minval=3, maxval=20)

// Range определение
range_high = ta.highest(high, range_period)
range_low = ta.lowest(low, range_period)
range_size = range_high - range_low
atr = ta.atr(14)

// В диапазоне (низкая волатильность)
in_range = range_size < atr * 3

// Касание уровней
touching_high = math.abs(high - range_high) < atr * touch_atr
touching_low = math.abs(low - range_low) < atr * touch_atr

// Счетчики касаний
var int high_tests = 0
var int low_tests = 0

if touching_high
    high_tests := high_tests + 1

if touching_low
    low_tests := low_tests + 1

// Entry условия (фейд от уровней)
long_condition = in_range and touching_low and low_tests >= min_tests and strategy.position_size == 0
short_condition = in_range and touching_high and high_tests >= min_tests and strategy.position_size == 0

// Position Management
if long_condition
    strategy.entry("Long", strategy.long)
    strategy.exit("Exit Long", from_entry="Long", stop=range_low - atr * 0.5, limit=(range_high + range_low) / 2)

if short_condition
    strategy.entry("Short", strategy.short)
    strategy.exit("Exit Short", from_entry="Short", stop=range_high + atr * 0.5, limit=(range_high + range_low) / 2)

// Time stop
if strategy.position_size > 0 and ta.barssince(long_condition) >= time_stop_bars
    strategy.close("Long", comment="Time Stop")

if strategy.position_size < 0 and ta.barssince(short_condition) >= time_stop_bars
    strategy.close("Short", comment="Time Stop")

// Visualization
plot(range_high, "Range High", color=color.red, linewidth=2)
plot(range_low, "Range Low", color=color.green, linewidth=2)
plot((range_high + range_low) / 2, "Middle", color=color.gray, linewidth=1)

bgcolor(in_range ? color.new(color.orange, 95) : na, title="Range")

if long_condition
    label.new(bar_index, low, "FADE LONG", style=label.style_label_up, color=color.green, textcolor=color.white)

if short_condition
    label.new(bar_index, high, "FADE SHORT", style=label.style_label_down, color=color.red, textcolor=color.white)
