//@version=5
indicator("15m Speculative Futures Suite v2", overlay=true, max_labels_count=500, max_lines_count=500)

// ============================================================================
// ПАРАМЕТРЫ
// ============================================================================

// --- Профиль ---
profile = input.string("Starter", "Профиль", options=["Starter", "Balanced", "Strict"], group="Профиль")

// --- Индикаторы ---
don_len = input.int(8, "Donchian период", minval=1, group="Индикаторы")
ema20_len = input.int(20, "EMA Fast", minval=1, group="Индикаторы")
ema50_len = input.int(50, "EMA Mid", minval=1, group="Индикаторы")
ema200_len = input.int(200, "EMA Slow", minval=1, group="Индикаторы")
bb_len = input.int(20, "BB период", minval=1, group="Индикаторы")
bb_mult = input.float(2.0, "BB множитель", minval=0.1, group="Индикаторы")
atr14_len = input.int(14, "ATR главный", minval=1, group="Индикаторы")
atr7_len = input.int(7, "ATR быстрый", minval=1, group="Индикаторы")

// --- Фильтры рынка ---
slope_lookback = input.int(10, "EMA200 slope lookback", minval=1, group="Фильтры")
atr_min_pct = input.float(0.4, "ATR min %", minval=0.1, group="Фильтры")
atr_max_pct = input.float(2.5, "ATR max %", minval=0.1, group="Фильтры")

// --- Сетап A (VWAP/EMA-зона) ---
setup_a_enable = input.bool(true, "Включить Сетап A (VWAP/EMA)", group="Сетап A")
zone_basis = input.string("EMA", "База зоны", options=["VWAP", "EMA"], group="Сетап A")
zone_tol_atr_pct = input.float(12.0, "Допуск зоны (% ATR14)", minval=0, group="Сетап A")
zone_tol_ticks = input.int(10, "Допуск зоны (тики)", minval=0, group="Сетап A")

// --- Сетап B (Donchian брейк) ---
setup_b_enable = input.bool(true, "Включить Сетап B (Donchian)", group="Сетап B")

// --- Общие параметры ---
fat_bar_mult = input.float(1.35, "Fat bar множитель ATR14", minval=0.5, group="Общие")
retest_expire_bars = input.int(8, "Срок ретеста (баров)", minval=1, group="Общие", tooltip="Starter:8, Balanced:6, Strict:4")
sl_min_pct = input.float(0.10, "SL min %", minval=0.01, group="Общие")
sl_max_pct = input.float(0.45, "SL max %", minval=0.01, group="Общие")
swing_lookback = input.int(3, "Swing lookback", minval=1, group="Общие")
body_pad_ticks = input.int(2, "Body pad (тики)", minval=0, group="Общие")
zone_pad_atr7 = input.float(0.35, "Zone pad ATR7", minval=0, group="Общие")
bb_pad_atr14 = input.float(0.15, "BB pad ATR14", minval=0, group="Общие")
bb_opp_min_r = input.float(0.8, "Min R до обратной BB", minval=0.1, group="Общие")

// --- Тейки ---
tp0_r = input.float(0.5, "TP0 (R)", minval=0.1, group="Тейки")
tp1_r = input.float(1.0, "TP1 (R)", minval=0.1, group="Тейки")
tp2_r = input.float(1.5, "TP2 (R)", minval=0.1, group="Тейки")
trail_atr_mult = input.float(1.0, "Trail ATR7 множитель", minval=0.1, group="Тейки")
max_bars_in_trade = input.int(14, "Max баров в сделке", minval=1, group="Тейки", tooltip="12-16")
contra_ema_bars = input.int(3, "Досрочный выход (баров против EMA20)", minval=1, group="Тейки")

// --- Визуализация ---
show_zones = input.bool(true, "Показать зоны", group="Визуал")
show_levels = input.bool(true, "Показать уровни", group="Визуал")

// ============================================================================
// РАСЧЕТ ИНДИКАТОРОВ
// ============================================================================

// --- EMA ---
ema20 = ta.ema(close, ema20_len)
ema50 = ta.ema(close, ema50_len)
ema200 = ta.ema(close, ema200_len)

// --- Donchian ---
don_high = ta.highest(high, don_len)
don_low = ta.lowest(low, don_len)

// --- Bollinger Bands ---
bb_basis = ta.sma(close, bb_len)
bb_dev = ta.stdev(close, bb_len)
bb_upper = bb_basis + bb_mult * bb_dev
bb_lower = bb_basis - bb_mult * bb_dev

// --- VWAP ---
vwap = ta.vwap(close)

// --- ATR ---
atr14 = ta.atr(atr14_len)
atr7 = ta.atr(atr7_len)
atr14_pct = (atr14 / close) * 100

// --- Slope EMA200 ---
ema200_slope = ema200 - ema200[slope_lookback]

// ============================================================================
// ФИЛЬТРЫ РЫНКА
// ============================================================================

trend_up = ema200_slope > 0
trend_down = ema200_slope < 0
atr_ok = atr14_pct >= atr_min_pct and atr14_pct <= atr_max_pct

market_filter_ok = atr_ok

// ============================================================================
// FAT BAR ФИЛЬТР
// ============================================================================

bar_range = high - low
fat_bar = bar_range > fat_bar_mult * atr14

// ============================================================================
// СЕТАП A: VWAP/EMA-ЗОНА
// ============================================================================

// Условия тренда для Сетапа A
setup_a_long_trend = close > ema200 and ema20 >= ema50
setup_a_short_trend = close < ema200 and ema20 <= ema50

// База зоны
zone_center_long = zone_basis == "VWAP" ? vwap : math.avg(ema20, ema50)
zone_center_short = zone_basis == "VWAP" ? vwap : math.avg(ema20, ema50)

zone_tol = zone_tol_atr_pct * atr14 / 100 + zone_tol_ticks * syminfo.mintick

// Касание зоны
touch_zone_long = low <= zone_center_long + zone_tol and high >= zone_center_long - zone_tol
touch_zone_short = high >= zone_center_short - zone_tol and low <= zone_center_short + zone_tol

// Триггер Сетапа A
setup_a_trigger_long = setup_a_enable and market_filter_ok and trend_up and setup_a_long_trend and touch_zone_long
setup_a_trigger_short = setup_a_enable and market_filter_ok and trend_down and setup_a_short_trend and touch_zone_short

// ============================================================================
// СЕТАП B: DONCHIAN BREAKOUT
// ============================================================================

// Пробой Donchian
don_break_long = close > don_high[1] and close > ema200
don_break_short = close < don_low[1] and close < ema200

// Триггер Сетапа B
setup_b_trigger_long = setup_b_enable and market_filter_ok and trend_up and don_break_long
setup_b_trigger_short = setup_b_enable and market_filter_ok and trend_down and don_break_short

// ============================================================================
// ARMED МЕХАНИКА + RETEST
// ============================================================================

var bool armed_long = false
var bool armed_short = false
var int armed_long_bar = 0
var int armed_short_bar = 0
var float armed_long_level = na
var float armed_short_level = na
var string armed_long_setup = ""
var string armed_short_setup = ""

// Любой триггер вооружает сигнал
any_trigger_long = setup_a_trigger_long or setup_b_trigger_long
any_trigger_short = setup_a_trigger_short or setup_b_trigger_short

// Вооружение (если не жирная свеча для мгновенного входа)
if any_trigger_long and not armed_long
    if fat_bar
        armed_long := true
        armed_long_bar := bar_index
        armed_long_level := setup_a_trigger_long ? zone_center_long : don_high[1]
        armed_long_setup := setup_a_trigger_long ? "A" : "B"
    else
        armed_long := true
        armed_long_bar := bar_index
        armed_long_level := setup_a_trigger_long ? zone_center_long : don_high[1]
        armed_long_setup := setup_a_trigger_long ? "A" : "B"

if any_trigger_short and not armed_short
    if fat_bar
        armed_short := true
        armed_short_bar := bar_index
        armed_short_level := setup_a_trigger_short ? zone_center_short : don_low[1]
        armed_short_setup := setup_a_trigger_short ? "A" : "B"
    else
        armed_short := true
        armed_short_bar := bar_index
        armed_short_level := setup_a_trigger_short ? zone_center_short : don_low[1]
        armed_short_setup := setup_a_trigger_short ? "A" : "B"

// Проверка ретеста
retest_tol_calc = zone_tol
retest_long = armed_long and low <= armed_long_level + retest_tol_calc and high >= armed_long_level - retest_tol_calc
retest_short = armed_short and high >= armed_short_level - retest_tol_calc and low <= armed_short_level + retest_tol_calc

// Истечение срока
expired_long = armed_long and (bar_index - armed_long_bar) > retest_expire_bars
expired_short = armed_short and (bar_index - armed_short_bar) > retest_expire_bars

if expired_long
    armed_long := false
    armed_long_level := na
    armed_long_setup := ""

if expired_short
    armed_short := false
    armed_short_level := na
    armed_short_setup := ""

// ============================================================================
// СТОП-ЛОСС СИСТЕМА (4 КАНДИДАТА + CLAMP)
// ============================================================================

calc_stop_long(simple float entry_price) =>
    // Кандидат 1: Swing Low
    swing_low = ta.lowest(low, swing_lookback)
    sl1 = swing_low - body_pad_ticks * syminfo.mintick
    
    // Кандидат 2: Тело сигнальной
    sl2 = math.min(open, close) - body_pad_ticks * syminfo.mintick
    
    // Кандидат 3: EMA/VWAP зона
    zone_low = math.min(ema20, ema50)
    sl3 = zone_low - zone_pad_atr7 * atr7
    
    // Кандидат 4: BB нижняя
    sl4 = bb_lower - bb_pad_atr14 * atr14
    
    // Выбираем самый дальний (lowest)
    sl_price = math.min(sl1, math.min(sl2, math.min(sl3, sl4)))
    
    // CLAMP по %
    sl_dist_pct = math.abs(entry_price - sl_price) / entry_price * 100
    
    final_sl = sl_dist_pct > sl_max_pct ? entry_price * (1 - sl_max_pct / 100) : 
               (sl_dist_pct < sl_min_pct ? entry_price * (1 - sl_min_pct / 100) : sl_price)
    
    [final_sl, sl_dist_pct]

calc_stop_short(simple float entry_price) =>
    // Кандидат 1: Swing High
    swing_high = ta.highest(high, swing_lookback)
    sl1 = swing_high + body_pad_ticks * syminfo.mintick
    
    // Кандидат 2: Тело сигнальной
    sl2 = math.max(open, close) + body_pad_ticks * syminfo.mintick
    
    // Кандидат 3: EMA/VWAP зона
    zone_high = math.max(ema20, ema50)
    sl3 = zone_high + zone_pad_atr7 * atr7
    
    // Кандидат 4: BB верхняя
    sl4 = bb_upper + bb_pad_atr14 * atr14
    
    // Выбираем самый дальний (highest)
    sl_price = math.max(sl1, math.max(sl2, math.max(sl3, sl4)))
    
    // CLAMP по %
    sl_dist_pct = math.abs(sl_price - entry_price) / entry_price * 100
    
    final_sl = sl_dist_pct > sl_max_pct ? entry_price * (1 + sl_max_pct / 100) : 
               (sl_dist_pct < sl_min_pct ? entry_price * (1 + sl_min_pct / 100) : sl_price)
    
    [final_sl, sl_dist_pct]

// ============================================================================
// ПРОВЕРКА РАССТОЯНИЯ ДО ОБРАТНОЙ BB
// ============================================================================

check_bb_distance_long(simple float entry_price, simple float r_size) =>
    dist_to_bb_upper = bb_upper - entry_price
    dist_to_bb_upper >= bb_opp_min_r * r_size

check_bb_distance_short(simple float entry_price, simple float r_size) =>
    dist_to_bb_lower = entry_price - bb_lower
    dist_to_bb_lower >= bb_opp_min_r * r_size

// ============================================================================
// ВХОД + ВАЛИДАЦИЯ
// ============================================================================

var bool in_trade = false
var float entry_price = na
var float stop_price = na
var float tp0_price = na
var float tp1_price = na
var float tp2_price = na
var int entry_bar = 0
var bool is_long = false
var float trail_stop = na
var bool tp0_hit = false
var bool tp1_hit = false
var int contra_ema_count = 0

// Вход по ретесту
var bool entry_long = false
var bool entry_short = false

entry_long := false
entry_short := false

if not in_trade and retest_long and not fat_bar
    [sl, sl_pct] = calc_stop_long(close)
    r_size = close - sl
    bb_ok = check_bb_distance_long(close, r_size)
    
    if sl_pct >= sl_min_pct and sl_pct <= sl_max_pct and bb_ok
        entry_long := true
        in_trade := true
        is_long := true
        entry_price := close
        stop_price := sl
        entry_bar := bar_index
        tp0_price := entry_price + tp0_r * r_size
        tp1_price := entry_price + tp1_r * r_size
        tp2_price := entry_price + tp2_r * r_size
        trail_stop := stop_price
        armed_long := false
        armed_long_level := na

if not in_trade and retest_short and not fat_bar
    [sl, sl_pct] = calc_stop_short(close)
    r_size = sl - close
    bb_ok = check_bb_distance_short(close, r_size)
    
    if sl_pct >= sl_min_pct and sl_pct <= sl_max_pct and bb_ok
        entry_short := true
        in_trade := true
        is_long := false
        entry_price := close
        stop_price := sl
        entry_bar := bar_index
        tp0_price := entry_price - tp0_r * r_size
        tp1_price := entry_price - tp1_r * r_size
        tp2_price := entry_price - tp2_r * r_size
        trail_stop := stop_price
        armed_short := false
        armed_short_level := na

// ============================================================================
// УПРАВЛЕНИЕ ПОЗИЦИЕЙ
// ============================================================================

if in_trade
    // TP0 -> BE
    if is_long and not tp0_hit and high >= tp0_price
        tp0_hit := true
        trail_stop := entry_price
    
    if not is_long and not tp0_hit and low <= tp0_price
        tp0_hit := true
        trail_stop := entry_price
    
    // TP1 -> трейлинг включен
    if is_long and not tp1_hit and high >= tp1_price
        tp1_hit := true
    
    if not is_long and not tp1_hit and low <= tp1_price
        tp1_hit := true
    
    // Трейлинг после TP1
    if tp1_hit
        if is_long
            new_trail = high - trail_atr_mult * atr7
            trail_stop := math.max(trail_stop, new_trail)
        else
            new_trail = low + trail_atr_mult * atr7
            trail_stop := math.min(trail_stop, new_trail)
    
    // Стоп-лосс / Трейл
    hit_stop = is_long ? low <= trail_stop : high >= trail_stop
    
    // TP2
    hit_tp2 = is_long ? high >= tp2_price : low <= tp2_price
    
    // Тайм-аут
    timeout = (bar_index - entry_bar) >= max_bars_in_trade
    
    // Досрочный выход (3 бара против EMA20)
    if is_long
        if close < ema20
            contra_ema_count := contra_ema_count + 1
        else
            contra_ema_count := 0
    else
        if close > ema20
            contra_ema_count := contra_ema_count + 1
        else
            contra_ema_count := 0
    
    early_exit = contra_ema_count >= contra_ema_bars and not tp0_hit
    
    // Выход
    if hit_stop or hit_tp2 or timeout or early_exit
        in_trade := false
        entry_price := na
        stop_price := na
        tp0_price := na
        tp1_price := na
        tp2_price := na
        entry_bar := 0
        is_long := false
        trail_stop := na
        tp0_hit := false
        tp1_hit := false
        contra_ema_count := 0

// ============================================================================
// ДИАГНОСТИКА
// ============================================================================

var string long_status = "NO SETUP"
var string short_status = "NO SETUP"

long_status := "NO SETUP"
short_status := "NO SETUP"

if in_trade and is_long
    long_status := "IN TRADE"
else if in_trade and not is_long
    short_status := "IN TRADE"
else if entry_long
    long_status := "HIT"
else if entry_short
    short_status := "HIT"
else if armed_long
    bars_left = retest_expire_bars - (bar_index - armed_long_bar)
    long_status := "ARMED [" + armed_long_setup + "] (" + str.tostring(bars_left) + ")"
else if armed_short
    bars_left_s = retest_expire_bars - (bar_index - armed_short_bar)
    short_status := "ARMED [" + armed_short_setup + "] (" + str.tostring(bars_left_s) + ")"
else if any_trigger_long and fat_bar
    long_status := "FAT BAR"
else if any_trigger_short and fat_bar
    short_status := "FAT BAR"
else if not atr_ok
    long_status := "ATR OOR"
    short_status := "ATR OOR"

// ============================================================================
// ВИЗУАЛИЗАЦИЯ
// ============================================================================

// Зоны
plot(show_zones ? ema20 : na, "EMA20", color=color.new(color.blue, 0), linewidth=1)
plot(show_zones ? ema50 : na, "EMA50", color=color.new(color.orange, 0), linewidth=1)
plot(show_zones ? ema200 : na, "EMA200", color=color.new(color.red, 0), linewidth=2)
plot(show_zones ? vwap : na, "VWAP", color=color.new(color.purple, 0), linewidth=1, style=plot.style_circles)

p_bb_upper = plot(show_zones ? bb_upper : na, "BB Upper", color=color.new(color.gray, 50))
p_bb_lower = plot(show_zones ? bb_lower : na, "BB Lower", color=color.new(color.gray, 50))
fill(p_bb_upper, p_bb_lower, color=color.new(color.gray, 90))

plot(show_zones ? don_high[1] : na, "Don High", color=color.new(color.green, 70), linewidth=1, style=plot.style_stepline)
plot(show_zones ? don_low[1] : na, "Don Low", color=color.new(color.red, 70), linewidth=1, style=plot.style_stepline)

// Уровни входа
plot(show_levels and in_trade ? entry_price : na, "Entry", color=color.new(color.white, 0), linewidth=2, style=plot.style_linebr)
plot(show_levels and in_trade ? trail_stop : na, "Stop/Trail", color=color.new(color.red, 0), linewidth=2, style=plot.style_linebr)
plot(show_levels and in_trade ? tp0_price : na, "TP0", color=color.new(color.yellow, 0), linewidth=1, style=plot.style_linebr)
plot(show_levels and in_trade ? tp1_price : na, "TP1", color=color.new(color.lime, 0), linewidth=1, style=plot.style_linebr)
plot(show_levels and in_trade ? tp2_price : na, "TP2", color=color.new(color.aqua, 0), linewidth=1, style=plot.style_linebr)

// Сигналы
plotshape(entry_long, "Long Entry", shape.triangleup, location.belowbar, color=color.new(color.lime, 0), size=size.small)
plotshape(entry_short, "Short Entry", shape.triangledown, location.abovebar, color=color.new(color.red, 0), size=size.small)

// Панель
if barstate.islast
    var table panel = table.new(position.top_right, 2, 12, border_width=1)
    
    profile_short = profile == "Starter" ? "START" : (profile == "Balanced" ? "BAL" : "STRICT")
    table.cell(panel, 0, 0, "Scalp Suite v2 [" + profile_short + "]", text_color=color.white, bgcolor=color.new(color.blue, 30))
    table.cell(panel, 1, 0, "", bgcolor=color.new(color.blue, 30))
    
    table.cell(panel, 0, 1, "ATR14 %", text_color=color.gray)
    table.cell(panel, 1, 1, str.tostring(atr14_pct, "#.##"), text_color=atr_ok ? color.lime : color.red)
    
    table.cell(panel, 0, 2, "ATR7", text_color=color.gray)
    table.cell(panel, 1, 2, str.tostring(atr7, "#.####"), text_color=color.white)
    
    table.cell(panel, 0, 3, "EMA200 Slope", text_color=color.gray)
    slope_color = ema200_slope > 0 ? color.lime : (ema200_slope < 0 ? color.red : color.gray)
    table.cell(panel, 1, 3, ema200_slope > 0 ? "UP" : (ema200_slope < 0 ? "DN" : "FLAT"), text_color=slope_color)
    
    table.cell(panel, 0, 4, "Long", text_color=color.gray)
    table.cell(panel, 1, 4, long_status, text_color=str.contains(long_status, "HIT") or str.contains(long_status, "TRADE") ? color.lime : color.white)
    
    table.cell(panel, 0, 5, "Short", text_color=color.gray)
    table.cell(panel, 1, 5, short_status, text_color=str.contains(short_status, "HIT") or str.contains(short_status, "TRADE") ? color.red : color.white)
    
    if in_trade
        r_size = is_long ? (entry_price - stop_price) : (stop_price - entry_price)
        current_r = is_long ? (close - entry_price) / r_size : (entry_price - close) / r_size
        
        table.cell(panel, 0, 6, "Entry", text_color=color.gray)
        table.cell(panel, 1, 6, str.tostring(entry_price, "#.####"), text_color=color.white)
        
        table.cell(panel, 0, 7, "R", text_color=color.gray)
        r_color = current_r > 0 ? color.lime : color.red
        table.cell(panel, 1, 7, str.tostring(current_r, "#.##") + "R", text_color=r_color)
        
        table.cell(panel, 0, 8, "Bars", text_color=color.gray)
        bars_in = bar_index - entry_bar
        table.cell(panel, 1, 8, str.tostring(bars_in) + "/" + str.tostring(max_bars_in_trade), text_color=color.white)
        
        table.cell(panel, 0, 9, "Status", text_color=color.gray)
        status_text = tp1_hit ? "TRAIL" : (tp0_hit ? "BE" : "RISK")
        status_color = tp1_hit ? color.aqua : (tp0_hit ? color.yellow : color.orange)
        table.cell(panel, 1, 9, status_text, text_color=status_color)

// Alerts
alertcondition(entry_long, "Long Entry", "Вход Long Setup {{ticker}}")
alertcondition(entry_short, "Short Entry", "Вход Short Setup {{ticker}}")
